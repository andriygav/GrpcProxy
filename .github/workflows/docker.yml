name: CI Docker Image

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push to outputs
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: andriygav/grpc-proxy:latest
          outputs: type=docker,dest=/tmp/image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: /tmp/image.tar
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
      - name: Testing
        run: |
          export TESTS=$(/bin/pwd)/tests
          docker run -v $TESTS:/tests -v /tmp:/tmp andriygav/grpc-proxy:latest /bin/bash -c "pip install -U pytest pytest-cov && pytest /tests --cov=grpc_proxy --cov-report=xml:/tmp/coverage.xml"
      - name: Upload to Codecov
        uses: codecov/codecov-action@v1  
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: /tmp/coverage.xml
          flags: unittests
          name: codecov-grpcproxy
          fail_ci_if_error: true
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: phparkitect/phparkitect
          tags: |
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'master') }}
            type=ref,event=tag
          flavor: |
            latest=false
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: ${{ GitHub.event_name != 'pull_request' }}
          context: .
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
