name: CI Docker Image

on: [push]

jobs:
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          pip install -U pytest
          pip install -U pytest-cov
          pip install -U -r src/requirements.txt
      - name: Testing
        run: |
          PYTHONPATH=src/ pytest tests/ --cov=src/grpc_proxy --cov-report=xml
  build:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push to outputs
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          tags: andriygav/grpc-proxy:latest
          outputs: type=docker,dest=/tmp/image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: /tmp/image.tar
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
      - name: Testing
        uses: andriygav/grpc-proxy:latest
        run: |
          pip install -U pytest, pytest-cov
          PYTHONPATH=src/ pytest tests/ --cov=src/grpc_proxy --cov-report=xml
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Push to Docker Hub tag latest
        uses: docker/build-push-action@v1
        with:
          context: .
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: andriygav/grpc-proxy
          tags: latest
      - name: Push to Docker Hub tag version
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: docker/build-push-action@v1
        with:
          context: .
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: andriygav/grpc-proxy
          tags: ${{ steps.get_version.outputs.VERSION }}
